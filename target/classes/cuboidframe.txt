 //v1 to v0
faces.add(new Face(//top
        1 * 8 + 3,
        1 * 8 + 0,
        0 * 8 + 1,
        0 * 8 + 2
));
faces.add(new Face(//left
        1 * 8 + 0,
        1 * 8 + 4,
        0 * 8 + 5,
        0 * 8 + 1
));
faces.add(new Face(//right
        1 * 8 + 7,
        1 * 8 + 3,
        0 * 8 + 2,
        0 * 8 + 6
));
faces.add(new Face(//bottom
        1 * 8 + 4,
        1 * 8 + 7,
        0 * 8 + 6,
        0 * 8 + 5
));

//v2 to v3
faces.add(new Face(//top
        2 * 8 + 3,
        2 * 8 + 0,
        3 * 8 + 1,
        3 * 8 + 2
));
faces.add(new Face(//left
        2 * 8 + 0,
        2 * 8 + 4,
        3 * 8 + 5,
        3 * 8 + 1
));
faces.add(new Face(//right
        2 * 8 + 7,
        2 * 8 + 3,
        3 * 8 + 2,
        3 * 8 + 6
));
faces.add(new Face(//bottom
        2 * 8 + 4,
        2 * 8 + 7,
        3 * 8 + 6,
        3 * 8 + 5
));

//v5 to v4
faces.add(new Face(//top
        5 * 8 + 3,
        5 * 8 + 0,
        4 * 8 + 1,
        4 * 8 + 2
));
faces.add(new Face(//left
        5 * 8 + 0,
        5 * 8 + 4,
        4 * 8 + 5,
        4 * 8 + 1
));
faces.add(new Face(//right
        5 * 8 + 7,
        5 * 8 + 3,
        4 * 8 + 2,
        4 * 8 + 6
));
faces.add(new Face(//bottom
        5 * 8 + 4,
        5 * 8 + 7,
        4 * 8 + 6,
        4 * 8 + 5
));

//v5 to v4
faces.add(new Face(//top
        6 * 8 + 3,
        6 * 8 + 0,
        7 * 8 + 1,
        7 * 8 + 2
));
faces.add(new Face(//left
        6 * 8 + 0,
        6 * 8 + 4,
        7 * 8 + 5,
        7 * 8 + 1
));
faces.add(new Face(//right
        6 * 8 + 7,
        6 * 8 + 3,
        7 * 8 + 2,
        7 * 8 + 6
));
faces.add(new Face(//bottom
        6 * 8 + 4,
        6 * 8 + 7,
        7 * 8 + 6,
        7 * 8 + 5
));

//v2 to v1
faces.add(new Face(//top
        2 * 8 + 0,
        2 * 8 + 1,
        1 * 8 + 2,
        1 * 8 + 3
));
faces.add(new Face(//left
        2 * 8 + 1,
        2 * 8 + 5,
        1 * 8 + 6,
        1 * 8 + 2
));
faces.add(new Face(//right
        2 * 8 + 4,
        2 * 8 + 0,
        1 * 8 + 3,
        1 * 8 + 7
));
faces.add(new Face(//bottom
        2 * 8 + 5,
        2 * 8 + 4,
        1 * 8 + 7,
        1 * 8 + 6
));

//v3 to v0
faces.add(new Face(//top
        3 * 8 + 0,
        3 * 8 + 1,
        0 * 8 + 2,
        0 * 8 + 3
));
faces.add(new Face(//left
        3 * 8 + 1,
        3 * 8 + 5,
        0 * 8 + 6,
        0 * 8 + 2
));
faces.add(new Face(//right
        3 * 8 + 4,
        3 * 8 + 0,
        0 * 8 + 3,
        0 * 8 + 7
));
faces.add(new Face(//bottom
        3 * 8 + 5,
        3 * 8 + 4,
        0 * 8 + 7,
        0 * 8 + 6
));

//v6 to v5
faces.add(new Face(//top
        6 * 8 + 0,
        6 * 8 + 1,
        5 * 8 + 2,
        5 * 8 + 3
));
faces.add(new Face(//left
        6 * 8 + 1,
        6 * 8 + 5,
        5 * 8 + 6,
        5 * 8 + 2
));
faces.add(new Face(//right
        6 * 8 + 4,
        6 * 8 + 0,
        5 * 8 + 3,
        5 * 8 + 7
));
faces.add(new Face(//bottom
        6 * 8 + 5,
        6 * 8 + 4,
        5 * 8 + 7,
        5 * 8 + 6
));

//v7 to v4
faces.add(new Face(//top
        7 * 8 + 0,
        7 * 8 + 1,
        4 * 8 + 2,
        4 * 8 + 3
));
faces.add(new Face(//left
        7 * 8 + 1,
        7 * 8 + 5,
        4 * 8 + 6,
        4 * 8 + 2
));
faces.add(new Face(//right
        7 * 8 + 4,
        7 * 8 + 0,
        4 * 8 + 3,
        4 * 8 + 7
));
faces.add(new Face(//bottom
        7 * 8 + 5,
        7 * 8 + 4,
        4 * 8 + 7,
        4 * 8 + 6
));

//v5 to v1
faces.add(new Face(//top
        5 * 8 + 2,
        5 * 8 + 1,
        1 * 8 + 5,
        1 * 8 + 6
));
faces.add(new Face(//left
        5 * 8 + 1,
        5 * 8 + 0,
        1 * 8 + 4,
        1 * 8 + 5
));
faces.add(new Face(//right
        5 * 8 + 3,
        5 * 8 + 2,
        1 * 8 + 6,
        1 * 8 + 7
));
faces.add(new Face(//bottom
        5 * 8 + 0,
        5 * 8 + 3,
        1 * 8 + 7,
        1 * 8 + 4
));

//v6 to v2
faces.add(new Face(//top
        6 * 8 + 2,
        6 * 8 + 1,
        2 * 8 + 5,
        2 * 8 + 6
));
faces.add(new Face(//left
        6 * 8 + 1,
        6 * 8 + 0,
        2 * 8 + 4,
        2 * 8 + 5
));
faces.add(new Face(//right
        6 * 8 + 3,
        6 * 8 + 2,
        2 * 8 + 6,
        2 * 8 + 7
));
faces.add(new Face(//bottom
        6 * 8 + 0,
        6 * 8 + 3,
        2 * 8 + 7,
        2 * 8 + 4
));

//v4 to v0
faces.add(new Face(//top
        4 * 8 + 2,
        4 * 8 + 1,
        0 * 8 + 5,
        0 * 8 + 6
));
faces.add(new Face(//left
        4 * 8 + 1,
        4 * 8 + 0,
        0 * 8 + 4,
        0 * 8 + 5
));
faces.add(new Face(//right
        4 * 8 + 3,
        4 * 8 + 2,
        0 * 8 + 6,
        0 * 8 + 7
));
faces.add(new Face(//bottom
        4 * 8 + 0,
        4 * 8 + 3,
        0 * 8 + 7,
        0 * 8 + 4
));

//v7 to v3
faces.add(new Face(//top
        7 * 8 + 2,
        7 * 8 + 1,
        3 * 8 + 5,
        3 * 8 + 6
));
faces.add(new Face(//left
        7 * 8 + 1,
        7 * 8 + 0,
        3 * 8 + 4,
        3 * 8 + 5
));
faces.add(new Face(//right
        7 * 8 + 3,
        7 * 8 + 2,
        3 * 8 + 6,
        3 * 8 + 7
));
faces.add(new Face(//bottom
        7 * 8 + 0,
        7 * 8 + 3,
        3 * 8 + 7,
        3 * 8 + 4
));

//v0
faces.add(new Face(//0
        0 * 8 + 0,
        0 * 8 + 1,
        0 * 8 + 5,
        0 * 8 + 4
));
faces.add(new Face(//1
        0 * 8 + 3,
        0 * 8 + 0,
        0 * 8 + 4,
        0 * 8 + 7
));
faces.add(new Face(//2
        0 * 8 + 2,
        0 * 8 + 1,
        0 * 8 + 0,
        0 * 8 + 3
));

//v1
faces.add(new Face(//0
        1 * 8 + 0,
        1 * 8 + 1,
        1 * 8 + 5,
        1 * 8 + 4
));
faces.add(new Face(//1
        1 * 8 + 1,
        1 * 8 + 2,
        1 * 8 + 6,
        1 * 8 + 5
));
faces.add(new Face(//2
        1 * 8 + 2,
        1 * 8 + 1,
        1 * 8 + 0,
        1 * 8 + 3
));

//v2
faces.add(new Face(//0
        2 * 8 + 2,
        2 * 8 + 3,
        2 * 8 + 7,
        2 * 8 + 6
));
faces.add(new Face(//1
        2 * 8 + 1,
        2 * 8 + 2,
        2 * 8 + 6,
        2 * 8 + 5
));
faces.add(new Face(//2
        2 * 8 + 2,
        2 * 8 + 1,
        2 * 8 + 0,
        2 * 8 + 3
));

//v3
faces.add(new Face(//0
        3 * 8 + 2,
        3 * 8 + 3,
        3 * 8 + 7,
        3 * 8 + 6
));
faces.add(new Face(//1
        3 * 8 + 3,
        3 * 8 + 0,
        3 * 8 + 4,
        3 * 8 + 7
));
faces.add(new Face(//2
        3 * 8 + 2,
        3 * 8 + 1,
        3 * 8 + 0,
        3 * 8 + 3
));

//v4
faces.add(new Face(//0
        4 * 8 + 0,
        4 * 8 + 1,
        4 * 8 + 5,
        4 * 8 + 4
));
faces.add(new Face(//1
        4 * 8 + 3,
        4 * 8 + 0,
        4 * 8 + 4,
        4 * 8 + 7
));
faces.add(new Face(//2
        4 * 8 + 4,
        4 * 8 + 5,
        4 * 8 + 6,
        4 * 8 + 7
));

//v5
faces.add(new Face(//0
        5 * 8 + 0,
        5 * 8 + 1,
        5 * 8 + 5,
        5 * 8 + 4
));
faces.add(new Face(//1
        5 * 8 + 1,
        5 * 8 + 2,
        5 * 8 + 6,
        5 * 8 + 5
));
faces.add(new Face(//2
        5 * 8 + 4,
        5 * 8 + 5,
        5 * 8 + 6,
        5 * 8 + 7
));

//v6
faces.add(new Face(//0
        6 * 8 + 2,
        6 * 8 + 3,
        6 * 8 + 7,
        6 * 8 + 6
));
faces.add(new Face(//1
        6 * 8 + 1,
        6 * 8 + 2,
        6 * 8 + 6,
        6 * 8 + 5
));
faces.add(new Face(//2
        6 * 8 + 4,
        6 * 8 + 5,
        6 * 8 + 6,
        6 * 8 + 7
));

//v7
faces.add(new Face(//0
        7 * 8 + 2,
        7 * 8 + 3,
        7 * 8 + 7,
        7 * 8 + 6
));
faces.add(new Face(//1
        7 * 8 + 3,
        7 * 8 + 0,
        7 * 8 + 4,
        7 * 8 + 7
));
faces.add(new Face(//2
        7 * 8 + 4,
        7 * 8 + 5,
        7 * 8 + 6,
        7 * 8 + 7
));