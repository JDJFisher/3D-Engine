//package com.game.guis.v1;
//
//
//import static com.engine.core.Options.*;
//import com.engine.core.AbstractGame;
//
//import javax.swing.*;
//import javax.swing.event.ChangeEvent;
//import java.awt.event.ActionEvent;
//
///**
// * Created by Jordan Fisher on 21/06/2017.
// */
//public class OptionGui extends Gui {
//    private JCheckBox checkBoxHUDvisibility;
//    private JCheckBox checkBoxFreeze;
//    private JCheckBox checkBoxAxisVisible;
//    private JCheckBox checkBoxSkyboxVisible;
//    private JCheckBox checkBoxShowFaces;
//    private JCheckBox checkBoxCullFaces;
//    private JCheckBox checkBoxFrustumCulling;
//    private JCheckBox checkBoxVSync;
//    private JCheckBox checkBoxAntiAliasing;
//    private JSlider sliderFOV;
//    private JSlider sliderViewDistanceFar;
//    private JSlider sliderAmbientLight;
//    private JFloatSlider sliderExposure;
//
//    public OptionGui(AbstractGame game) {
//        super(game);
//    }
//
//    @Override
//    protected void initComponents(){
//        (checkBoxHUDvisibility = new JCheckBox("HUD Visibility")).addActionListener(this);
//        (checkBoxFreeze = new JCheckBox("Freeze")).addActionListener(this);
//        (checkBoxAxisVisible = new JCheckBox("Axis Visible")).addActionListener(this);
//        (checkBoxSkyboxVisible = new JCheckBox("Skybox Visible")).addActionListener(this);
//        (checkBoxShowFaces = new JCheckBox("Show Faces")).addActionListener(this);
//        (checkBoxCullFaces = new JCheckBox("Cull Faces")).addActionListener(this);
//        (checkBoxFrustumCulling = new JCheckBox("Frustum Culling")).addActionListener(this);
//        (checkBoxVSync = new JCheckBox("vSync")).addActionListener(this);
//        (checkBoxAntiAliasing = new JCheckBox("Anti Aliasing")).addActionListener(this);
//
//        JLabel labelFOV = new JLabel("FOV");
//        (sliderFOV = new JSlider(JSlider.VERTICAL, FOV_MINIMUM, FOV_MAXIMUM, getFOV())).addChangeListener(this);
//        sliderFOV.setMajorTickSpacing(10);
//        sliderFOV.setMinorTickSpacing(2);
//        sliderFOV.setPaintTicks(true);
//        sliderFOV.setPaintLabels(true);
//
//        JLabel labelViewDistanceFar = new JLabel("Render distance");
//        (sliderViewDistanceFar = new JSlider(JSlider.VERTICAL, viewDistanceFar_MINIMUM, viewDistanceFar_MAXIMUM, getViewDistanceFar())).addChangeListener(this);
//        sliderViewDistanceFar.setMajorTickSpacing(1000);
//        sliderViewDistanceFar.setMinorTickSpacing(250);
//        sliderViewDistanceFar.setPaintTicks(true);
//        sliderViewDistanceFar.setPaintLabels(true);
//
//        JLabel labelAmbientLight = new JLabel("Ambient light");
//        (sliderAmbientLight = new JSlider(JSlider.VERTICAL, ambientLight_MINIMUM,  ambientLight_MAXIMUM, getAmbientLight())).addChangeListener(this);
//        sliderAmbientLight.setMajorTickSpacing(15);
//        sliderAmbientLight.setMinorTickSpacing(5);
//        sliderAmbientLight.setPaintTicks(true);
//        sliderAmbientLight.setPaintLabels(true);
//
//
//        layout.setHorizontalGroup(layout.createSequentialGroup()
//                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
//                        .addComponent(checkBoxHUDvisibility)
//                        .addComponent(checkBoxFreeze)
//                        .addComponent(checkBoxAxisVisible)
//                        .addComponent(checkBoxSkyboxVisible)
//                        .addComponent(checkBoxShowFaces)
//                        .addComponent(checkBoxCullFaces)
//                        .addComponent(checkBoxFrustumCulling)
//                        .addComponent(checkBoxVSync)
//                        .addComponent(checkBoxAntiAliasing)
//                )
//                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)
//                        .addComponent(labelFOV)
//                        .addComponent(sliderFOV)
//                )
//                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)
//                        .addComponent(labelViewDistanceFar)
//                        .addComponent(sliderViewDistanceFar)
//                )
//                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.CENTER)
//                        .addComponent(labelAmbientLight)
//                        .addComponent(sliderAmbientLight)
//                )
//        );
//
//        layout.setVerticalGroup(layout.createSequentialGroup()
//                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
//                        .addGroup(layout.createSequentialGroup()
//                                .addComponent(checkBoxHUDvisibility)
//                                .addComponent(checkBoxFreeze)
//                                .addComponent(checkBoxAxisVisible)
//                                .addComponent(checkBoxSkyboxVisible)
//                                .addComponent(checkBoxShowFaces)
//                                .addComponent(checkBoxCullFaces)
//                                .addComponent(checkBoxFrustumCulling)
//                                .addComponent(checkBoxVSync)
//                                .addComponent(checkBoxAntiAliasing)
//                        )
//                        .addGroup(layout.createSequentialGroup()
//                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
//                                        .addComponent(labelFOV)
//                                        .addComponent(labelViewDistanceFar)
//                                        .addComponent(labelAmbientLight)
//                                )
//                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
//                                        .addComponent(sliderFOV)
//                                        .addComponent(sliderViewDistanceFar)
//                                        .addComponent(sliderAmbientLight)
//                                )
//                        )
//                )
//        );
//    }
//
//    @Override
//    public void update(){
//        checkBoxHUDvisibility.setSelected(isHUDvisible());
//        checkBoxFreeze.setSelected(isFrozen());
//        checkBoxAxisVisible.setSelected(isAxisVisible());
//        checkBoxSkyboxVisible.setSelected(isSkyboxVisible());
//        checkBoxShowFaces.setSelected(isShowingFacesEnabled());
//        checkBoxCullFaces.setSelected(isCullingFacesEnabled());
//        checkBoxFrustumCulling.setSelected(isFrustumCullingEnabled());
//        checkBoxVSync.setSelected(isVSyncEnabled());
//        checkBoxAntiAliasing.setSelected(isAntiAliasingEnabled());
//        sliderFOV.setValue(getFOV());
//        sliderViewDistanceFar.setValue(getViewDistanceFar());
//        sliderAmbientLight.setValue(getAmbientLight());
//    }
//
//    @Override
//    public void actionPerformed(ActionEvent e) {
//        Object component = e.getSource();
//
//        if(component == checkBoxHUDvisibility){
//            setHUDvisibility(checkBoxHUDvisibility.isSelected());
//        }else if(component == checkBoxFreeze){
//            setFreeze(checkBoxFreeze.isSelected());
//        }else if(component == checkBoxAxisVisible){
//            setAxisVisibility(checkBoxAxisVisible.isSelected());
//        }else if(component == checkBoxSkyboxVisible){
//            setSkyboxVisibility(checkBoxSkyboxVisible.isSelected());
//        }else if(component == checkBoxShowFaces){
//            setShowFaces(checkBoxShowFaces.isSelected());
//        }else if(component == checkBoxCullFaces){
//            setCullFaces(checkBoxCullFaces.isSelected());
//        }else if(component == checkBoxFrustumCulling){
//            setFrustumCull(checkBoxFrustumCulling.isSelected());
//        }else if(component == checkBoxVSync){
//            setVSync(checkBoxVSync.isSelected());
//        }else if(component == checkBoxAntiAliasing){
//            setAntiAliasing(checkBoxAntiAliasing.isSelected());
//        }
//    }
//
//    @Override
//    public void stateChanged(ChangeEvent e) {
//        Object component = e.getSource();
//
//        if(component == sliderFOV){
//            setFOV(sliderFOV.getValue());
//        }else if(component == sliderViewDistanceFar){
//            setViewDistanceFar(sliderViewDistanceFar.getValue());
//        }else if(component == sliderAmbientLight){
//            setAmbientLight(sliderAmbientLight.getValue());
//        }
//    }
//}
